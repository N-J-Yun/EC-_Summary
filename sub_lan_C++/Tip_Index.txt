
//항목 2
tip_C++_1 : 클래스 상수 선언 및 정의와 enum hack 사용법

//항목 3
tip_C++_2 : const 멤버 함수, const return 멤버 함수
tip_C++_3 : mutable 멤버 변수의 활용
tip_C++_4 : 비상수 버전 멤버 함수가 코드 중복을 피하기 위해 상수 버전을 호출하는 법

//항목 4
tip_C++_5 : 비지역 정적 객체의 초기화 문제 해결(Singleton Pattern)

//항목 6
tip_C++_6 : unique한 객체 생성을 위한 객체 복사 방지법

//항목 7
tip_C++_7 : virtual 멤버 함수를 가진 base 클래스의 소멸자는 virtual로 선언하자.

//항목 8
tip_C++_8 : 소멸자에서 발생할 수 있는 예외 처리법
 
//항목 9
tip_C++_9 : 생성자, 소멸자 내에서 가상함수를 호출하지 말자!

//항목 11
tip_C++_10 : 대입연산자 오버로딩에서는 자기대입을 반드시 고려하자(+Copy & Swap) 

//항목 12
tip_C++_11 : 복사함수를 구현할 때 모든 부분을 복사하자(특히 파생 클래스에서)

//항목 13
tip_C++_12 : RAII(자원 획득은 초기화)기법, 팩토리 함수

//항목 14
tip_C++_13 : 자원 관리 클래스에서의 복사 동작 구현

//항목 15
tip_C++_14 : 실제 자원을 사용해야하는 API를 위한 자원 관리 객체 -> 자원 변환법(암시적, 명시적)

//항목 17
tip_C++_15 : new로 생성한 객체를 저장하는 스마트 포인터는 별도로 선언하자!
